|can_top
rst_i => rst_i.IN2
clk_i => clk_i.IN1
rx_i => can_tx:can_tx_instance.rx_i
rx_busy << <GND>
tx_o << can_tx:can_tx_instance.tx_o
tx_busy << <GND>
test_clk_can << clk_can.DB_MAX_OUTPUT_PORT_TYPE
test_can_state[0] << test_can_state.DB_MAX_OUTPUT_PORT_TYPE
test_can_state[1] << test_can_state.DB_MAX_OUTPUT_PORT_TYPE
test_can_state[2] << <GND>
test_can_tx_state[0] << can_tx:can_tx_instance.test_tx_state[0]
test_can_tx_state[1] << can_tx:can_tx_instance.test_tx_state[1]
test_can_tx_state[2] << can_tx:can_tx_instance.test_tx_state[2]
test_can_tx_state[3] << can_tx:can_tx_instance.test_tx_state[3]
test_can_tx_state[4] << can_tx:can_tx_instance.test_tx_state[4]
test_can_tx_state[5] << can_tx:can_tx_instance.test_tx_state[5]
test_can_tx_state[6] << can_tx:can_tx_instance.test_tx_state[6]
test_can_tx_state[7] << can_tx:can_tx_instance.test_tx_state[7]
test_bit_count[0] << can_tx:can_tx_instance.test_bit_count[0]
test_bit_count[1] << can_tx:can_tx_instance.test_bit_count[1]
test_bit_count[2] << can_tx:can_tx_instance.test_bit_count[2]
test_bit_count[3] << can_tx:can_tx_instance.test_bit_count[3]
test_bit_count[4] << can_tx:can_tx_instance.test_bit_count[4]
test_bit_count[5] << can_tx:can_tx_instance.test_bit_count[5]
test_bit_count[6] << can_tx:can_tx_instance.test_bit_count[6]
test_bit_count[7] << can_tx:can_tx_instance.test_bit_count[7]
test_bit_pol_count[0] << can_tx:can_tx_instance.test_bit_pol_count[0]
test_bit_pol_count[1] << can_tx:can_tx_instance.test_bit_pol_count[1]
test_bit_pol_count[2] << can_tx:can_tx_instance.test_bit_pol_count[2]
test_bit_pol_count[3] << <GND>
bit_stuffed << <GND>
test_last_bit << <GND>


|can_top|can_tx:can_tx_instance
rst_i => tx_acknowledged_o_reg.ACLR
rst_i => crc_reg[0].ACLR
rst_i => crc_reg[1].ACLR
rst_i => crc_reg[2].ACLR
rst_i => crc_reg[3].ACLR
rst_i => crc_reg[4].ACLR
rst_i => crc_reg[5].ACLR
rst_i => crc_reg[6].ACLR
rst_i => crc_reg[7].ACLR
rst_i => crc_reg[8].ACLR
rst_i => crc_reg[9].ACLR
rst_i => crc_reg[10].ACLR
rst_i => crc_reg[11].ACLR
rst_i => crc_reg[12].ACLR
rst_i => crc_reg[13].ACLR
rst_i => crc_reg[14].ACLR
rst_i => last_bit.ACLR
rst_i => bit_stuff_bit.ACLR
rst_i => bit_pol_count[0].PRESET
rst_i => bit_pol_count[1].ACLR
rst_i => bit_pol_count[2].ACLR
rst_i => count[0].ACLR
rst_i => count[1].ACLR
rst_i => count[2].ACLR
rst_i => count[3].ACLR
rst_i => count[4].ACLR
rst_i => count[5].ACLR
rst_i => count[6].ACLR
rst_i => bit_count_reg[0].ACLR
rst_i => bit_count_reg[1].ACLR
rst_i => bit_count_reg[2].ACLR
rst_i => bit_count_reg[3].ACLR
rst_i => bit_count_reg[4].ACLR
rst_i => bit_count_reg[5].ACLR
rst_i => bit_count_reg[6].ACLR
rst_i => bit_count_reg[7].ACLR
rst_i => tx_lost_o_reg.ACLR
rst_i => NEXT_TX_STATE~18.DATAIN
rst_i => TX_STATE~4.DATAIN
clk_can_i => tx_acknowledged_o_reg.CLK
clk_can_i => crc_reg[0].CLK
clk_can_i => crc_reg[1].CLK
clk_can_i => crc_reg[2].CLK
clk_can_i => crc_reg[3].CLK
clk_can_i => crc_reg[4].CLK
clk_can_i => crc_reg[5].CLK
clk_can_i => crc_reg[6].CLK
clk_can_i => crc_reg[7].CLK
clk_can_i => crc_reg[8].CLK
clk_can_i => crc_reg[9].CLK
clk_can_i => crc_reg[10].CLK
clk_can_i => crc_reg[11].CLK
clk_can_i => crc_reg[12].CLK
clk_can_i => crc_reg[13].CLK
clk_can_i => crc_reg[14].CLK
clk_can_i => last_bit.CLK
clk_can_i => bit_stuff_bit.CLK
clk_can_i => bit_pol_count[0].CLK
clk_can_i => bit_pol_count[1].CLK
clk_can_i => bit_pol_count[2].CLK
clk_can_i => count[0].CLK
clk_can_i => count[1].CLK
clk_can_i => count[2].CLK
clk_can_i => count[3].CLK
clk_can_i => count[4].CLK
clk_can_i => count[5].CLK
clk_can_i => count[6].CLK
clk_can_i => bit_count_reg[0].CLK
clk_can_i => bit_count_reg[1].CLK
clk_can_i => bit_count_reg[2].CLK
clk_can_i => bit_count_reg[3].CLK
clk_can_i => bit_count_reg[4].CLK
clk_can_i => bit_count_reg[5].CLK
clk_can_i => bit_count_reg[6].CLK
clk_can_i => bit_count_reg[7].CLK
clk_can_i => tx_lost_o_reg.CLK
clk_can_i => NEXT_TX_STATE~16.DATAIN
clk_can_i => TX_STATE~2.DATAIN
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_start_i => TX_STATE.OUTPUTSELECT
tx_lost_o <= tx_lost_o_reg.DB_MAX_OUTPUT_PORT_TYPE
tx_acknowledged_o <= tx_acknowledged_o_reg.DB_MAX_OUTPUT_PORT_TYPE
message_type => tx_o.DATAB
local_address[0] => Mux0.IN9
local_address[1] => Mux0.IN10
local_address[2] => Mux0.IN7
local_address[3] => Mux0.IN8
local_address[4] => Mux0.IN5
local_address[5] => Mux0.IN6
remote_address[0] => Mux1.IN9
remote_address[1] => Mux1.IN10
remote_address[2] => Mux1.IN7
remote_address[3] => Mux1.IN8
remote_address[4] => Mux1.IN5
remote_address[5] => Mux1.IN6
handshake[0] => tx_o.DATAA
handshake[1] => tx_o.DATAB
expand_count[0] => Mux2.IN2
expand_count[1] => Mux2.IN3
expand_count[2] => Mux2.IN4
expand_count[3] => Mux2.IN5
cmd_data_sign[0] => Mux3.IN3
cmd_data_sign[1] => Mux3.IN4
cmd_data_sign[2] => Mux3.IN5
cmd_data_sign[3] => Mux3.IN6
cmd_data_sign[4] => Mux3.IN7
cmd_data_sign[5] => Mux3.IN8
cmd_data_sign[6] => Mux3.IN9
cmd_data_sign[7] => Mux3.IN10
dlc[0] => Mux4.IN2
dlc[1] => Mux4.IN3
dlc[2] => Mux4.IN4
dlc[3] => Mux4.IN5
tx_data[0] => Mux5.IN6
tx_data[1] => Mux5.IN7
tx_data[2] => Mux5.IN8
tx_data[3] => Mux5.IN9
tx_data[4] => Mux5.IN10
tx_data[5] => Mux5.IN11
tx_data[6] => Mux5.IN12
tx_data[7] => Mux5.IN13
tx_data[8] => Mux5.IN14
tx_data[9] => Mux5.IN15
tx_data[10] => Mux5.IN16
tx_data[11] => Mux5.IN17
tx_data[12] => Mux5.IN18
tx_data[13] => Mux5.IN19
tx_data[14] => Mux5.IN20
tx_data[15] => Mux5.IN21
tx_data[16] => Mux5.IN22
tx_data[17] => Mux5.IN23
tx_data[18] => Mux5.IN24
tx_data[19] => Mux5.IN25
tx_data[20] => Mux5.IN26
tx_data[21] => Mux5.IN27
tx_data[22] => Mux5.IN28
tx_data[23] => Mux5.IN29
tx_data[24] => Mux5.IN30
tx_data[25] => Mux5.IN31
tx_data[26] => Mux5.IN32
tx_data[27] => Mux5.IN33
tx_data[28] => Mux5.IN34
tx_data[29] => Mux5.IN35
tx_data[30] => Mux5.IN36
tx_data[31] => Mux5.IN37
tx_data[32] => Mux5.IN38
tx_data[33] => Mux5.IN39
tx_data[34] => Mux5.IN40
tx_data[35] => Mux5.IN41
tx_data[36] => Mux5.IN42
tx_data[37] => Mux5.IN43
tx_data[38] => Mux5.IN44
tx_data[39] => Mux5.IN45
tx_data[40] => Mux5.IN46
tx_data[41] => Mux5.IN47
tx_data[42] => Mux5.IN48
tx_data[43] => Mux5.IN49
tx_data[44] => Mux5.IN50
tx_data[45] => Mux5.IN51
tx_data[46] => Mux5.IN52
tx_data[47] => Mux5.IN53
tx_data[48] => Mux5.IN54
tx_data[49] => Mux5.IN55
tx_data[50] => Mux5.IN56
tx_data[51] => Mux5.IN57
tx_data[52] => Mux5.IN58
tx_data[53] => Mux5.IN59
tx_data[54] => Mux5.IN60
tx_data[55] => Mux5.IN61
tx_data[56] => Mux5.IN62
tx_data[57] => Mux5.IN63
tx_data[58] => Mux5.IN64
tx_data[59] => Mux5.IN65
tx_data[60] => Mux5.IN66
tx_data[61] => Mux5.IN67
tx_data[62] => Mux5.IN68
tx_data[63] => Mux5.IN69
rx_i => always0.IN1
rx_i => tx_acknowledged_o_reg.OUTPUTSELECT
tx_o <= tx_o.DB_MAX_OUTPUT_PORT_TYPE
test_tx_state[0] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
test_tx_state[1] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
test_tx_state[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
test_tx_state[3] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
test_tx_state[4] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
test_tx_state[5] <= test_tx_state.DB_MAX_OUTPUT_PORT_TYPE
test_tx_state[6] <= <GND>
test_tx_state[7] <= test_tx_state.DB_MAX_OUTPUT_PORT_TYPE
test_bit_count[0] <= bit_count_reg[0].DB_MAX_OUTPUT_PORT_TYPE
test_bit_count[1] <= bit_count_reg[1].DB_MAX_OUTPUT_PORT_TYPE
test_bit_count[2] <= bit_count_reg[2].DB_MAX_OUTPUT_PORT_TYPE
test_bit_count[3] <= bit_count_reg[3].DB_MAX_OUTPUT_PORT_TYPE
test_bit_count[4] <= bit_count_reg[4].DB_MAX_OUTPUT_PORT_TYPE
test_bit_count[5] <= bit_count_reg[5].DB_MAX_OUTPUT_PORT_TYPE
test_bit_count[6] <= bit_count_reg[6].DB_MAX_OUTPUT_PORT_TYPE
test_bit_count[7] <= bit_count_reg[7].DB_MAX_OUTPUT_PORT_TYPE
test_bit_pol_count[0] <= bit_pol_count[0].DB_MAX_OUTPUT_PORT_TYPE
test_bit_pol_count[1] <= bit_pol_count[1].DB_MAX_OUTPUT_PORT_TYPE
test_bit_pol_count[2] <= bit_pol_count[2].DB_MAX_OUTPUT_PORT_TYPE


|can_top|can_rx:can_rx_instance
rst_i => ~NO_FANOUT~
clk_can_i => ~NO_FANOUT~


|can_top|baud_rate:baud_rate_gen
rst_i => count.OUTPUTSELECT
rst_i => count.OUTPUTSELECT
rst_i => count.OUTPUTSELECT
rst_i => count.OUTPUTSELECT
rst_i => count.OUTPUTSELECT
rst_i => count.OUTPUTSELECT
rst_i => count.OUTPUTSELECT
rst_i => count.OUTPUTSELECT
rst_i => count.OUTPUTSELECT
rst_i => count.OUTPUTSELECT
rst_i => baud_clk_o_reg.ENA
clk_i => baud_clk_o_reg.CLK
clk_i => count[0].CLK
clk_i => count[1].CLK
clk_i => count[2].CLK
clk_i => count[3].CLK
clk_i => count[4].CLK
clk_i => count[5].CLK
clk_i => count[6].CLK
clk_i => count[7].CLK
clk_i => count[8].CLK
clk_i => count[9].CLK
baud_clk_o <= baud_clk_o_reg.DB_MAX_OUTPUT_PORT_TYPE


